@import "./functions";

// Get modifiers
// converts a sass nested-map into a modifier
// using get function
// usage @include get-modifiers('heading.margin')
@mixin get-modifiers($key, $map: $tokens, $prefix: "-") {
  $modifiers: get($key);

  @each $item, $value in $modifiers {
    @if type-of($value) == "map" {
      &#{$prefix}#{$item} {
        @include get-modifiers("#{$key}.#{$item}");
      }
    } @else {
      #{$item}: $value;
    }
  }
}

// generate classes from your map color key
@mixin utility-map($map: $tokens, $attrs...) {
  $key: "color";
  @each $attr in $attrs {
    @include class-generator($key, $attr, $map);
  }
}

@mixin class-generator($key, $attribute, $map: $tokens, $prefix: "-") {
  // get a predefined map
  $map: get($key, $map);
  @if type-of($map) != "map" {
    @error 'Incorrect map type `#{$map}`, map is required';
  } @else {
    // loop through maps
    @each $item, $value in $map {
      // generate utility classes from keys
      // e.g. a color map containing colors .color-key { color: value }
      // prefix class if necessary
      &#{$prefix}#{$attribute}#{$prefix}#{$item} {
        @if type-of($value) == "map" {
          @include generator("#{$key}.#{$item}");
        } @else {
          #{$attribute}: $value;
          // &:hover {
          //   #{$attribute}: transparentize($value, .3);
          // }
        }
      }
      @if type-of($value) == "color" {
        &#{$prefix}hover\:#{$attribute}#{$prefix}#{$item} {
          &:hover {
            #{$attribute}: $value !important;
          }
        }
        &#{$prefix}focus\:#{$attribute}#{$prefix}#{$item} {
          &:focus {
            #{$attribute}: $value !important;
          }
        }
      }
    }
  }
}

// generate classes from your map key
@mixin generator($key, $map: $tokens, $attrs...) {
  @if length($attrs) >= 1 {
    @each $attr in $attrs {
      @include class-generator($key, $attr, $map);
    }
  }
}

// loop through specified top level keys and generate classes
// @include map-components($tokens, 'btns', 'cards', 'font-style')
@mixin map-components($map: $tokens, $keys...) {
  @each $key in $keys {
    @if map-get($map, $key) {
      @include get-modifiers($key, $map);
    }
  }
}

@mixin component($attrs...) {
  @if length($attrs) >= 1 {
    @each $key, $value in $attrs {
      #{$key}: $value;
    }
  }
}
