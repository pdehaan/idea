{"version":3,"sources":["src/_js-kit.js"],"names":["_$","css","parent","document","querySelector","_$$","nodes","querySelectorAll","Array","prototype","slice","call","_js","methods","selector","scope","Error","elem","event","callback","useCapture","addEventListener","url","params","parser","createElement","href","window","location","query","vars","search","substring","split","length","i","pair","decodeURIComponent","fn","readyState","elms","forEach","distance","getBoundingClientRect","top","left","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth"],"mappings":";AAGA,SAASA,EAAGC,EAAKC,GACR,OAACA,GAAUC,UAAUC,cAAcH,GAG5C,SAASI,EAAIJ,EAAKC,GACZI,IAAAA,GAASJ,GAAUC,UAAUI,iBAAiBN,GAC3CO,OAAAA,MAAMC,UAAUC,MAAMC,KAAKL,EAAO,GAG3C,IAAIM,EAAO,WAAW,aAIhBC,IAAAA,EAAU,CAYdA,IAAc,SAASC,EAAUC,GAC3B,IAACD,EAAU,MAAM,IAAIE,MAAM,8BACxBD,OAAAA,EACHA,EAAMX,cAAcU,GACpBX,SAASC,cAAcU,IAS7BD,OAAiB,SAASC,EAAUC,GAC9B,IAACD,EAAU,MAAM,IAAIE,MAAM,8BACxBD,OAAAA,EACHA,EAAMR,iBAAiBO,GACvBX,SAASI,iBAAiBO,IAUhCD,GAAa,SAASI,EAAMC,EAAOC,EAAUC,GACvC,IAACH,EACH,MAAM,IAAID,MAAM,qDACd,IAACE,EAAO,MAAM,IAAIF,MAAM,0CACxB,IAACG,GAAgC,mBAAbA,EACtB,MAAM,IAAIH,MAAM,mDAClBC,EAAKI,iBAAiBH,EAAOC,EAAUC,IAAc,IASvDP,UAAoB,SAASS,GACvBC,IAAAA,EAAS,GACTC,EAASrB,SAASsB,cAAc,KACpCD,EAAOE,KAAOJ,GAAOK,OAAOC,SAASF,KACjCG,IACAC,EADQN,EAAOO,OAAOC,UAAU,GACnBC,MAAM,KACnBH,GAAAA,EAAKI,OAAS,EAAG,OAAOX,EACvB,IAAA,IAAIY,EAAI,EAAGA,EAAIL,EAAKI,OAAQC,IAAK,CAChCC,IAAAA,EAAON,EAAKK,GAAGF,MAAM,KACzBV,EAAOc,mBAAmBD,EAAK,KAAOC,mBAAmBD,EAAK,IAEzDb,OAAAA,GAQTV,MAAgB,SAASyB,GAEnB,GAAc,mBAAPA,EAITnC,MAAwB,gBAAxBA,SAASoC,YACe,aAAxBpC,SAASoC,WAEFD,SAITnC,SAASkB,iBAAiB,mBAAoBiB,GAAI,IAMpDzB,KAAe,SAASC,EAAUK,GAC5B,IAACL,EAAU,MAAM,IAAIE,MAAM,8BAC3B,IAACG,GAAgC,mBAAbA,EACtB,MAAM,IAAIH,MAAM,mDAEdwB,IAAAA,EAAOrC,SAASI,iBAAiBO,GAErCN,MAAMC,UAAUgC,QAAQ9B,KAAK6B,EAAMrB,IASrCN,aAAuB,SAASI,GAC1ByB,IAAAA,EAAWzB,EAAK0B,wBAElBD,OAAAA,EAASE,KAAO,GAChBF,EAASG,MAAQ,GACjBH,EAASI,SACRnB,OAAOoB,aAAe5C,SAAS6C,gBAAgBC,eAChDP,EAASQ,QACRvB,OAAOwB,YAAchD,SAAS6C,gBAAgBI,eAK5CvC,OAAAA,EA7HE","file":"_js-kit.dcd62132.js","sourceRoot":"..","sourcesContent":["/* eslint-disable no-unused-vars */\r\n// eslint-disable-next-line no-unused-vars\r\n\r\nfunction _$(css, parent) {\r\n  return (parent || document).querySelector(css)\r\n}\r\n\r\nfunction _$$(css, parent) {\r\n  var nodes = (parent || document).querySelectorAll(css)\r\n  return Array.prototype.slice.call(nodes, 0)\r\n}\r\n\r\nvar _js = (function() {\r\n  'use strict'\r\n\r\n  // Create the methods object\r\n  var methods = {}\r\n\r\n  //\r\n  // Methods\r\n  //\r\n\r\n  /**\r\n   * Get an element in the DOM\r\n   * @param  {String} selector The selector to match against\r\n   * @param  {Node} scope      An element to search within [optional]\r\n   * @return {Node}            The first matching element\r\n   */\r\n  methods.get = function(selector, scope) {\r\n    if (!selector) throw new Error('Please provide a selector.')\r\n    return scope\r\n      ? scope.querySelector(selector)\r\n      : document.querySelector(selector)\r\n  }\r\n\r\n  /**\r\n   * Get all matching elements in the DOM\r\n   * @param  {String} selector The selector to match against\r\n   * @param  {Node} scope      An element to search within [optional]\r\n   * @return {NodeList}        The matching elements\r\n   */\r\n  methods.getAll = function(selector, scope) {\r\n    if (!selector) throw new Error('Please provide a selector.')\r\n    return scope\r\n      ? scope.querySelectorAll(selector)\r\n      : document.querySelectorAll(selector)\r\n  }\r\n\r\n  /**\r\n   * Setup an event listener\r\n   * @param  {Node}     elem        The element to attach the listener to\r\n   * @param  {String}   event       The event to listen for\r\n   * @param  {Function} callback    The callback to run on the event\r\n   * @param  {Boolean}  useCapture  If true, set useCapture to true [optional]\r\n   */\r\n  methods.on = function(elem, event, callback, useCapture) {\r\n    if (!elem)\r\n      throw new Error('Please provide an element to attach the event to.')\r\n    if (!event) throw new Error('Please provide an event to listen for.')\r\n    if (!callback || typeof callback !== 'function')\r\n      throw new Error('Please provide a valid callback function to run')\r\n    elem.addEventListener(event, callback, useCapture || false)\r\n  }\r\n\r\n  /**\r\n   * Get the URL parameters\r\n   * source: https://css-tricks.com/snippets/javascript/get-url-variables/\r\n   * @param  {String} url The URL\r\n   * @return {Object}     The URL parameters\r\n   */\r\n  methods.getParams = function(url) {\r\n    var params = {}\r\n    var parser = document.createElement('a')\r\n    parser.href = url || window.location.href\r\n    var query = parser.search.substring(1)\r\n    var vars = query.split('&')\r\n    if (vars.length < 2) return params\r\n    for (var i = 0; i < vars.length; i++) {\r\n      var pair = vars[i].split('=')\r\n      params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1])\r\n    }\r\n    return params\r\n  }\r\n\r\n  /*!\r\n * Run event after the DOM is ready\r\n * (c) 2017 Chris Ferdinandi, MIT License, https://gomakethings.com\r\n * @param  {Function} fn Callback function\r\n */\r\n  methods.ready = function(fn) {\r\n    // Sanity check\r\n    if (typeof fn !== 'function') return\r\n\r\n    // If document is already loaded, run method\r\n    if (\r\n      document.readyState === 'interactive' ||\r\n      document.readyState === 'complete'\r\n    ) {\r\n      return fn()\r\n    }\r\n\r\n    // Otherwise, wait until document is loaded\r\n    document.addEventListener('DOMContentLoaded', fn, false)\r\n  }\r\n\r\n  /**\r\n   * Traverse loop and call a method\r\n   */\r\n  methods.each = function(selector, callback) {\r\n    if (!selector) throw new Error('Please provide a selector.')\r\n    if (!callback || typeof callback !== 'function')\r\n      throw new Error('Please provide a valid callback function to run')\r\n\r\n    var elms = document.querySelectorAll(selector)\r\n\r\n    Array.prototype.forEach.call(elms, callback)\r\n  }\r\n\r\n  /*!\r\n * Determine if an element is in the viewport\r\n * (c) 2017 Chris Ferdinandi, MIT License, https://gomakethings.com\r\n * @param  {Node}    elem The element\r\n * @return {Boolean}      Returns true if element is in the viewport\r\n */\r\n  methods.isInViewport = function(elem) {\r\n    var distance = elem.getBoundingClientRect()\r\n    return (\r\n      distance.top >= 0 &&\r\n      distance.left >= 0 &&\r\n      distance.bottom <=\r\n      (window.innerHeight || document.documentElement.clientHeight) &&\r\n      distance.right <=\r\n      (window.innerWidth || document.documentElement.clientWidth)\r\n    )\r\n  }\r\n\r\n  // Expose the public methods\r\n  return methods\r\n})()\r\n"]}